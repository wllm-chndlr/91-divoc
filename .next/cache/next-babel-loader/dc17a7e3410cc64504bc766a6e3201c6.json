{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              console.log('Fetching data...');\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (err) {\n                setError(err);\n              }));\n\n            case 5:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/wllmchndlr/code/corona/utils/useStats.js"],"names":["useEffect","useState","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","console","log","fetch","then","res","json","err","data"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACRF,QAAQ,EADA;AAAA,MAC3BG,KAD2B;AAAA,MACpBC,QADoB;;AAAA,mBAEJJ,QAAQ,CAAC,IAAD,CAFJ;AAAA,MAE3BK,OAF2B;AAAA,MAElBC,UAFkB;;AAAA,mBAGRN,QAAQ,EAHA;AAAA,MAG3BO,KAH2B;AAAA,MAGpBC,QAHoB;;AAKlCT,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACIH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AAERE,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAJJ;AAAA,+CAMuBC,KAAK,CAACV,GAAD,CAAL,CACdW,IADc,CACT,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADM,WAER,UAAAC,GAAG,EAAI;AACVR,gBAAAA,QAAQ,CAACQ,GAAD,CAAR;AACH,eAJc,CANvB;;AAAA;AAMUC,cAAAA,IANV;AAYIb,cAAAA,QAAQ,CAACa,IAAD,CAAR;AACAX,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeAG,IAAAA,SAAS;AACZ,GAjBQ,EAiBN,CAACP,GAAD,CAjBM,CAAT;AAmBA,SAAO;AACHC,IAAAA,KAAK,EAALA,KADG;AAEHE,IAAAA,OAAO,EAAPA,OAFG;AAGHE,IAAAA,KAAK,EAALA;AAHG,GAAP;AAKH","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useStats(url) {\n    const [stats, setStats] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        async function fetchData() {\n            setLoading(true);\n            setError();\n\n            console.log('Fetching data...');\n\n            const data = await fetch(url)\n                .then(res => res.json())\n                .catch(err => {\n                    setError(err);\n                });\n\n            setStats(data);\n            setLoading(false);\n        }\n        fetchData();\n    }, [url]);\n\n    return {\n        stats,\n        loading,\n        error\n    };\n}"]},"metadata":{},"sourceType":"module"}